
snippet cust "CustomEvent"
"var detail = {$1};",
this.dispatchEvent(new CustomEvent('change', {detail: detail}));
$0
endsnippet

snippet pretty "prettyprint"
<pre class=prettyprint><code>$1</code></pre>
$0
endsnippet

snippet for "for (...) {...} (counting up)" b
for (var ${1:i} = 0, ${2:len} = ${3:Things.length}; $1 < $2; $1++) {
    ${VISUAL}$0
}
endsnippet

snippet ford "for (...) {...} (counting down, faster)" b
for (var ${2:i} = ${1:Things.length} - 1; $2 >= 0; $2--) {
    ${VISUAL}$0
}
endsnippet

snippet fun "function (fun)"
function ${1:function_name}(${2:argument}) {
    ${VISUAL}$0
}
endsnippet


snippet clos "Immediately-Invoked Closure"
(function () {
    $0
})();
endsnippet

snippet ae "ele.addEventListener"
$$$('#$1').addEventListener('$2', function(e) {
    $0
});
endsnippet

snippet co "HTML Comment"
<!-- $1 -->$0
endsnippet

snippet input "Input with Label"
<label for='${2:${1/[[:alpha:]]+|( )/(?1:_:\L$0)/g}}'>$1</label><input type='${3:text/submit/hidden/button}' name='${4:$2}' value='$5'${6: id='${7:$2}'}`!p x(snip)`>
endsnippet

snippet input "<input>"
<input type='${1:text/submit/hidden/button}' name='${2:some_name}' value='$3'${4: id='${5:$2}'}`!p x(snip)`>
endsnippet

snippet opt "Option"
<option${1: value='${3:option}'}>${3:$2}</option>
endsnippet

snippet select "Select Box"
<select name='${1:some_name}' id='${2:$1}'${3:${4: multiple}${5: onchange='${6:}'}${7: size='${8:1}'}}>
    <option${9: value='${10:option1}'}>${11:$10}</option>
    <option${12: value='${13:option2}'}>${14:$13}</option>${15:}
    $0
</select>
endsnippet

snippet canvas "<canvas>"
<canvas id=${1:ID} width=${2:500} height=${3:500}>$0
endsnippet

snippet textarea "<textarea>"
<textarea name='${1:Name}' rows='${2:8}' cols='${3:40}'>$0</textarea>
endsnippet

snippet link "<link>"
<link rel='${1:stylesheet}' href='${2:/css/master.css}' type='text/css' media='${3:screen}'>
endsnippet

snippet meta "<meta>"
<meta name='${1:name}' content='${2:content}'`!p x(snip)`>
endsnippet

snippet scriptsrc "script src..."
<script src='$1' type='text/javascript' charset='${3:utf-8}'></script>
endsnippet

snippet script "script"
<script type='text/javascript' charset='utf-8'>
    $0
</script>
endsnippet

snippet css "style"
<style type='text/css' media='screen'>
    $0
</style>
endsnippet

snippet table "table"
<table border='${1:0}'${2: cellspacing='${3:5}' cellpadding='${4:5}'}>
    <tr><th>${5:Header}</th></tr>
    <tr><td>${0:Data}</td></tr>
</table>
endsnippet

snippet img "Image"
<img src='$0'/>
endsnippet

snippet dl "definition list"
<dl>
  <dt>$1</dt>
  <dd>$2</dd>
</dl>
endsnippet

snippet html "HTML Template"
<!DOCTYPE html>
<html>
<head>
    <title>${1}</title>
    <meta charset='utf-8' />
        <meta http-equiv='X-UA-Compatible' content='IE=egde,chrome=1'>
        <meta name='viewport' content='width=device-width, initial-scale=1.0'>
</head>
<body>
  ${2}
</body>
</html>
endsnippet

snippet poly9 "Polymer 0.9+ element"
<!-- The <$1> custom element declaration.

  Attributes:
    Events:
    Methods:
-->

<dom-module id='$1'>
  <style>
  </style>
  <template>
    $2
  </template>
</dom-module>

<script>
  Polymer({
    is: '$1',

    ready: function() {
    },

  });
</script>
endsnippet

snippet prop "Polymer 0.9+ properties"
properties: {
  $1: {
    type: String,
    value: '$2',
        reflectToAttribute: false,
        observer: '$1Change',
  },
},
endsnippet

snippet repeat "Polymer 0.9+ repeat template"
<template is='dom-repeat' items='{{$1}}'>
  $0
</template>
endsnippet

snippet if "Polymer 0.9+ if template"
<template is='dom-if' if='{{$1}}'>
  $0
</template>
endsnippet

snippet list "Polymer 1.0 listeners"
listeners: {
    '$1.tap': '_$1Tap',
    $0
},
endsnippet

snippet G "G2"
ùîæ<sup>2</sup>$0
endsnippet

snippet R "R2"
‚Ñù<sup>2</sup>
endsnippet

snippet vec "vector"
<b>$1<sub>$2</sub></b>$0
endsnippet
